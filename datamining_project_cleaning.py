# -*- coding: utf-8 -*-
"""Datamining_Project_cleaning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nLTpDWwL8TvJaWgln0t_vqD5Lw0w_eew
"""

import pandas as pd
import numpy as np
path='/content/drive/MyDrive/Colab Notebooks/aug_train.csv'
dataset=pd.read_csv(path)
dataset

dataset.info()

spec_chars = ["!",'"',"#","%","&","'","(",")",
              "*","+",",","-",".","/",":",";","<",
              "=",">","?","@","[","\\","]","^","_",
              "`","{","|","}","~","â€“"]
for char in spec_chars:
    dataset['experience'] = dataset['experience'].str.replace(char, '')
    dataset['last_new_job']=dataset['last_new_job'].str.replace(char,'')

dataset['target']=dataset['target'].astype(int)

dataset.info()

dataset['experience']=pd.to_numeric(dataset['experience'])
dataset['last_new_job']=dataset['last_new_job'].str.replace('Never','NaN')
dataset['last_new_job']=pd.to_numeric(dataset['last_new_job'],errors='coerce')
dataset.info()

dataset

dataset['last_new_job'].isnull().sum()

dataset['last_new_job'].fillna(0,inplace=True)

dataset

dataset.info()

dataset['experience'].fillna(0,inplace=True)

dataset.info()

dataset.isnull().sum()

dataset['gender'].fillna(dataset['gender'].mode()[0], inplace=True)
dataset['enrolled_university'].fillna(dataset['enrolled_university'].mode()[0],inplace=True)
dataset['education_level'].fillna(dataset['education_level'].mode()[0],inplace=True)
dataset['major_discipline'].fillna(dataset['major_discipline'].mode()[0],inplace=True)
dataset['company_type'].fillna(dataset['company_type'].mode()[0],inplace=True)

dataset=dataset.drop('company_size',axis=1)

dataset['experience']=dataset['experience'].astype(int)
dataset['last_new_job']=dataset['last_new_job'].astype(int)

dataset.info()

dataset.head()

dataset.rename(columns={"target":"Target"})

file_name = 'data_clean(noLE).xlsx'
  
# saving the excel
dataset.to_excel(file_name)
print('DataFrame is written to Excel File successfully.')

from sklearn.preprocessing import LabelEncoder
Le =LabelEncoder()
dataset.gender=Le.fit_transform(dataset.gender)
dataset['relevent_experience']=Le.fit_transform(dataset['relevent_experience'])
dataset.enrolled_university=Le.fit_transform(dataset.enrolled_university)
dataset.major_discipline=Le.fit_transform(dataset.major_discipline)
dataset.company_type=Le.fit_transform(dataset.company_type)
dataset.education_level=Le.fit_transform(dataset.education_level)

dataset.head()

dataset['company_type'].value_counts()

file_name = 'data_clean(LE).xlsx'
  
# saving the excel
dataset.to_excel(file_name)
print('DataFrame is written to Excel File successfully.')